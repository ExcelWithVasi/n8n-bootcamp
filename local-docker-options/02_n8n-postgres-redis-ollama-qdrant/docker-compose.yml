version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    volumes:
      # n8n's internal data is now stored in the postgres database
      - ./shared:/data/shared # For sharing files between n8n and Ollama
      - ./n8n_data:/home/node/.n8n
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - WEBHOOK_URL=http://${N8N_HOST}:${N8N_PORT}/
      - N8N_PROTOCOL=http
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_SECURE_COOKIE=false # Only for local dev. Set to true and use a reverse proxy for production with HTTPS.
      
      # qdrant vector store config
      - QDRANT_URL=http://qdrant:6333
      
      # Ollama models config
      - OLLAMA_URL=http://ollama:11434
      
      # Redis related
      - EXECUTIONS_MODE=${EXECUTIONS_MODE}
      - QUEUE_BULL_REDIS_HOST=${QUEUE_BULL_REDIS_HOST}
      - QUEUE_BULL_REDIS_PORT=${QUEUE_BULL_REDIS_PORT}
      
      # Database configuration ---
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      
      
      # Recommended to add this for the permission warning
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      - qdrant
      - ollama
      
  postgres:
    image: postgres:15-alpine # A lightweight and stable PostgreSQL image
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_POSTGRESDB_USER} -d ${DB_POSTGRESDB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=n8n

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes
    
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333" # Qdrant's main API port
      - "6334:6334" # Qdrant's gRPC port
    volumes:
      - ./qdrant_data:/qdrant/storage

  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_data:/root/.ollama
      - ./shared:/data/shared # For sharing files
    environment:
      - OLLAMA_HOST=0.0.0.0    